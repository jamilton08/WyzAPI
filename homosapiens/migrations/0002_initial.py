# Generated by Django 5.1.1 on 2024-09-30 12:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('homosapiens', '0001_initial'),
        ('organizations', '0007_alter_organization_slug'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='providerserviceprovide',
            name='providing_service',
            field=models.ManyToManyField(blank=True, null=True, related_name='%(class)s_providing', to='services.servicescontainer'),
        ),
        migrations.AddField(
            model_name='recieverrestrictions',
            name='restricted',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restrictions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recieverrestrictions',
            name='service',
            field=models.ManyToManyField(related_name='restricts', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='recieverserviceprovide',
            name='providing_service',
            field=models.ManyToManyField(blank=True, null=True, related_name='%(class)s_providing', to='services.servicescontainer'),
        ),
        migrations.AddField(
            model_name='recieversignee',
            name='admin_approve',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_aproving', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recieversignee',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_signees', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='recieversignee',
            name='signee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_signed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicereciever',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_receivers', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='servicereciever',
            name='overwatcher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='overwatches', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicereciever',
            name='reciever',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recieving_service', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recieverserviceprovide',
            name='reciever_obj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_retainer', to='homosapiens.servicereciever'),
        ),
        migrations.AddField(
            model_name='recieverrestrictions',
            name='reciever_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reciever_restrictions', to='homosapiens.servicereciever'),
        ),
        migrations.AddField(
            model_name='overwatchsignee',
            name='reciever',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overwatching_instance', to='homosapiens.servicereciever'),
        ),
        migrations.AddField(
            model_name='servicerecieverrefactored',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refactored_receivers', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='servicerecieverrefactored',
            name='overwathers',
            field=models.ManyToManyField(blank=True, null=True, related_name='compile', to='homosapiens.servicereciever'),
        ),
        migrations.AddField(
            model_name='servicerecieverrefactored',
            name='reciever',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sr', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='servicereciever',
            constraint=models.UniqueConstraint(fields=('organization', 'reciever', 'overwatcher'), name='recieve unique services'),
        ),
        migrations.AddConstraint(
            model_name='servicereciever',
            constraint=models.UniqueConstraint(condition=models.Q(('overwatcher__isnull', True)), fields=('organization', 'reciever'), name='recieve unique service when overwatch is  null'),
        ),
        migrations.AddConstraint(
            model_name='recieverserviceprovide',
            constraint=models.UniqueConstraint(fields=('is_reciever', 'reciever_obj'), name='provide unique services for reciever'),
        ),
        migrations.AddConstraint(
            model_name='servicerecieverrefactored',
            constraint=models.UniqueConstraint(fields=('organization', 'reciever'), name='make sure that each is unique'),
        ),
    ]
